{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50],"program":"/sgoinfre/goinfre/Perso/bbrunell/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","fasthash","/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"aes\"","--cfg","feature=\"avx\"","--cfg","feature=\"avx2\"","--cfg","feature=\"default\"","--cfg","feature=\"doc\"","--cfg","feature=\"fasthash-sys\"","--cfg","feature=\"sse42\"","-C","metadata=93f6375e191e044f","-C","extra-filename=-93f6375e191e044f","--out-dir","/Users/bbrunell/npuzzle/target/rls/debug/deps","-L","dependency=/Users/bbrunell/npuzzle/target/rls/debug/deps","--extern","fasthash_sys=/Users/bbrunell/npuzzle/target/rls/debug/deps/libfasthash_sys-d155fa1d559ac9a2.rmeta","--extern","seahash=/Users/bbrunell/npuzzle/target/rls/debug/deps/libseahash-e5f3d66e716377d2.rmeta","--extern","xoroshiro128=/Users/bbrunell/npuzzle/target/rls/debug/deps/libxoroshiro128-8db3f1c45c92ec8c.rmeta","--cap-lints","allow","-L","native=/Users/bbrunell/npuzzle/target/rls/debug/build/fasthash-sys-2d501a3cbe68f424/out","--error-format=json","--sysroot","/sgoinfre/goinfre/Perso/bbrunell/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,98,98,114,117,110,101,108,108,47,110,112,117,122,122,108,101,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,102,97,115,116,104,97,115,104,45,57,51,102,54,51,55,53,101,49,57,49,101,48,52,52,102,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"fasthash","disambiguator":[33181903916269467,17669562625822283812]},"crate_root":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src","external_crates":[{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4680476137390187807,17118232108371533317]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[395860541893199504,14119727998271152369]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1883751235990237101,13050952199660841280]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14992191205204974336,187257134115189521]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":5,"id":{"name":"libc","disambiguator":[13711397750981643997,5466272945196031893]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":6,"id":{"name":"unwind","disambiguator":[3859305508273286470,8854496368734295790]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":7,"id":{"name":"panic_unwind","disambiguator":[3472742474031782457,1873693969544132989]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":8,"id":{"name":"fasthash_sys","disambiguator":[1588503010740503395,9602753323197789565]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":9,"id":{"name":"seahash","disambiguator":[6502863394172153677,13484281937983759286]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":10,"id":{"name":"xoroshiro128","disambiguator":[17501492653748869632,2365974523874176771]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":11,"id":{"name":"rand","disambiguator":[93772538578754966,2250527237774250889]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[12915020969927312221,12400654674942490904]}}],"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":3105,"line_start":1,"line_end":112,"column_start":1,"column_end":36}},"imports":[{"kind":"Use","ref_id":{"krate":9,"index":76},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86228,"byte_end":86237,"line_start":30,"line_end":30,"column_start":19,"column_end":28},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86241,"byte_end":86252,"line_start":30,"line_end":30,"column_start":32,"column_end":43},"name":"SeaHasher64","value":"","parent":{"krate":0,"index":592}},{"kind":"Use","ref_id":{"krate":9,"index":54},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86254,"byte_end":86258,"line_start":30,"line_end":30,"column_start":45,"column_end":49},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86262,"byte_end":86268,"line_start":30,"line_end":30,"column_start":53,"column_end":59},"name":"hash64","value":"","parent":{"krate":0,"index":592}},{"kind":"Use","ref_id":{"krate":9,"index":56},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86270,"byte_end":86281,"line_start":30,"line_end":30,"column_start":61,"column_end":72},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86285,"byte_end":86300,"line_start":30,"line_end":30,"column_start":76,"column_end":91},"name":"hash_with_seeds","value":"","parent":{"krate":0,"index":592}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1862,"byte_end":1871,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"alias_span":null,"name":"BufHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1873,"byte_end":1881,"line_start":80,"line_end":80,"column_start":16,"column_end":24},"alias_span":null,"name":"FastHash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1883,"byte_end":1893,"line_start":80,"line_end":80,"column_start":26,"column_end":36},"alias_span":null,"name":"FastHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1895,"byte_end":1906,"line_start":80,"line_end":80,"column_start":38,"column_end":49},"alias_span":null,"name":"Fingerprint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1908,"byte_end":1917,"line_start":80,"line_end":80,"column_start":51,"column_end":60},"alias_span":null,"name":"HasherExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1919,"byte_end":1930,"line_start":80,"line_end":80,"column_start":62,"column_end":73},"alias_span":null,"name":"RandomState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1932,"byte_end":1936,"line_start":80,"line_end":80,"column_start":75,"column_end":79},"alias_span":null,"name":"Seed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1938,"byte_end":1950,"line_start":80,"line_end":80,"column_start":81,"column_end":93},"alias_span":null,"name":"StreamHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1056},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2104,"byte_end":2116,"line_start":86,"line_end":86,"column_start":16,"column_end":28},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2120,"byte_end":2130,"line_start":86,"line_end":86,"column_start":32,"column_end":42},"name":"CityHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2132,"byte_end":2148,"line_start":86,"line_end":86,"column_start":44,"column_end":60},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2152,"byte_end":2165,"line_start":86,"line_end":86,"column_start":64,"column_end":77},"name":"CityHasherExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1290},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2184,"byte_end":2197,"line_start":88,"line_end":88,"column_start":16,"column_end":29},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2201,"byte_end":2214,"line_start":88,"line_end":88,"column_start":33,"column_end":46},"name":"FarmHasherExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2216,"byte_end":2228,"line_start":88,"line_end":88,"column_start":48,"column_end":60},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2232,"byte_end":2242,"line_start":88,"line_end":88,"column_start":64,"column_end":74},"name":"FarmHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2262,"byte_end":2275,"line_start":89,"line_end":89,"column_start":18,"column_end":31},"alias_span":null,"name":"Lookup3Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1650},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2320,"byte_end":2339,"line_start":92,"line_end":92,"column_start":17,"column_end":36},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2343,"byte_end":2357,"line_start":92,"line_end":92,"column_start":40,"column_end":54},"name":"MetroHasherExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1558},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2359,"byte_end":2377,"line_start":92,"line_end":92,"column_start":56,"column_end":74},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2381,"byte_end":2392,"line_start":92,"line_end":92,"column_start":78,"column_end":89},"name":"MetroHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1742},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2525,"byte_end":2534,"line_start":96,"line_end":96,"column_start":14,"column_end":23},"alias_span":null,"name":"MumHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1784},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2552,"byte_end":2564,"line_start":97,"line_end":97,"column_start":17,"column_end":29},"alias_span":null,"name":"MurmurHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2036},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2583,"byte_end":2603,"line_start":98,"line_end":98,"column_start":18,"column_end":38},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2607,"byte_end":2620,"line_start":98,"line_end":98,"column_start":42,"column_end":55},"name":"Murmur2Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2220},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2645,"byte_end":2666,"line_start":100,"line_end":100,"column_start":5,"column_end":26},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2670,"byte_end":2683,"line_start":100,"line_end":100,"column_start":30,"column_end":43},"name":"Murmur3Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2220},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2685,"byte_end":2706,"line_start":100,"line_end":100,"column_start":45,"column_end":66},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2710,"byte_end":2726,"line_start":100,"line_end":100,"column_start":70,"column_end":86},"name":"Murmur3HasherExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":9,"index":76},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2762,"byte_end":2773,"line_start":103,"line_end":103,"column_start":14,"column_end":25},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2777,"byte_end":2786,"line_start":103,"line_end":103,"column_start":29,"column_end":38},"name":"SeaHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2805,"byte_end":2820,"line_start":104,"line_end":104,"column_start":18,"column_end":33},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2824,"byte_end":2836,"line_start":104,"line_end":104,"column_start":37,"column_end":49},"name":"SpookyHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":682},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2838,"byte_end":2853,"line_start":104,"line_end":104,"column_start":51,"column_end":66},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2857,"byte_end":2872,"line_start":104,"line_end":104,"column_start":70,"column_end":85},"name":"SpookyHasherExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2478},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2896,"byte_end":2909,"line_start":107,"line_end":107,"column_start":5,"column_end":18},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2913,"byte_end":2924,"line_start":107,"line_end":107,"column_start":22,"column_end":33},"name":"T1ha0Hasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2436},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2926,"byte_end":2941,"line_start":107,"line_end":107,"column_start":35,"column_end":50},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2945,"byte_end":2959,"line_start":107,"line_end":107,"column_start":54,"column_end":68},"name":"T1ha64BeHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2965,"byte_end":2980,"line_start":108,"line_end":108,"column_start":5,"column_end":20},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2984,"byte_end":2998,"line_start":108,"line_end":108,"column_start":24,"column_end":38},"name":"T1ha64LeHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2352},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3000,"byte_end":3014,"line_start":108,"line_end":108,"column_start":40,"column_end":54},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3018,"byte_end":3031,"line_start":108,"line_end":108,"column_start":58,"column_end":71},"name":"T1haHasherExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2302},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3037,"byte_end":3050,"line_start":109,"line_end":109,"column_start":5,"column_end":18},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3054,"byte_end":3064,"line_start":109,"line_end":109,"column_start":22,"column_end":32},"name":"T1haHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":856},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3082,"byte_end":3092,"line_start":112,"line_end":112,"column_start":13,"column_end":23},"alias_span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3096,"byte_end":3104,"line_start":112,"line_end":112,"column_start":27,"column_end":35},"name":"XXHasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":3105,"line_start":1,"line_end":112,"column_start":1,"column_end":36},"name":"","qualname":"::","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":114},{"krate":0,"index":190},{"krate":0,"index":272},{"krate":0,"index":298},{"krate":0,"index":396},{"krate":0,"index":422},{"krate":0,"index":462},{"krate":0,"index":542},{"krate":0,"index":592},{"krate":0,"index":634},{"krate":0,"index":722},{"krate":0,"index":788},{"krate":0,"index":880},{"krate":0,"index":898},{"krate":0,"index":904},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":938},{"krate":0,"index":950}],"decl_id":null,"docs":" A suite of non-cryptographic hash functions for Rust.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1528,"byte_end":1550,"line_start":58,"line_end":58,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3425,"byte_end":3436,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"Fingerprint","qualname":"::hasher::Fingerprint","value":"Fingerprint<T>","parent":null,"children":[{"krate":0,"index":36}],"decl_id":null,"docs":" Generate a good, portable, forever-fixed hash value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3513,"byte_end":3524,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"fingerprint","qualname":"::hasher::Fingerprint::fingerprint","value":"fn (&self) -> T","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" This is intended to be a good fingerprinting primitive.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3566,"byte_end":3580,"line_start":20,"line_end":20,"column_start":11,"column_end":25},"name":"BuildHasherExt","qualname":"::hasher::BuildHasherExt","value":"BuildHasherExt: BuildHasher","parent":null,"children":[{"krate":0,"index":40}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3605,"byte_end":3615,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"FastHasher","qualname":"::hasher::BuildHasherExt::FastHasher","value":"type FastHasher: FastHasher;","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3684,"byte_end":3692,"line_start":25,"line_end":25,"column_start":11,"column_end":19},"name":"FastHash","qualname":"::hasher::FastHash","value":"FastHash: BuildHasherExt","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50}],"decl_id":null,"docs":" Fast non-cryptographic hash functions\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":44},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3761,"byte_end":3766,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Value","qualname":"::hasher::FastHash::Value","value":"type Value;","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" The output hash generated value.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3818,"byte_end":3822,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Seed","qualname":"::hasher::FastHash::Seed","value":"type Seed: Default + Copy;","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" The seed to generate hash value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3953,"byte_end":3967,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"hash_with_seed","qualname":"::hasher::FastHash::hash_with_seed","value":"fn <T> (bytes: &T, seed: Self::Seed) -> Self::Value","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Hash functions for a byte array.\n For convenience, a seed is also hashed into the result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4078,"byte_end":4082,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"hash","qualname":"::hasher::FastHash::hash","value":"fn <T> (bytes: &T) -> Self::Value","parent":{"krate":0,"index":42},"children":[],"decl_id":null,"docs":" Hash functions for a byte array.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4236,"byte_end":4246,"line_start":42,"line_end":42,"column_start":11,"column_end":21},"name":"FastHasher","qualname":"::hasher::FastHasher","value":"FastHasher: Hasher","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" Fast non-cryptographic hasher\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4330,"byte_end":4334,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Seed","qualname":"::hasher::FastHasher::Seed","value":"type Seed: Default + Copy + From<Seed>;","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" The seed to generate hash value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4426,"byte_end":4429,"line_start":51,"line_end":51,"column_start":8,"column_end":11},"name":"new","qualname":"::hasher::FastHasher::new","value":"fn () -> Self","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Constructs a new `FastHasher`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4409,"byte_end":4418,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4558,"byte_end":4578,"line_start":56,"line_end":56,"column_start":8,"column_end":28},"name":"new_with_random_seed","qualname":"::hasher::FastHasher::new_with_random_seed","value":"fn () -> Self","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Constructs a new `FastHasher` with a random seed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4698,"byte_end":4707,"line_start":61,"line_end":61,"column_start":8,"column_end":17},"name":"with_seed","qualname":"::hasher::FastHasher::with_seed","value":"fn (seed: Self::Seed) -> Self","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Constructs a new `FastHasher` with seed.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4792,"byte_end":4801,"line_start":65,"line_end":65,"column_start":11,"column_end":20},"name":"BufHasher","qualname":"::hasher::BufHasher","value":"BufHasher: FastHasher + AsRef<[u8]>","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70}],"decl_id":null,"docs":" Hasher in the buffer mode for short key\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4897,"byte_end":4919,"line_start":67,"line_end":67,"column_start":8,"column_end":30},"name":"with_capacity_and_seed","qualname":"::hasher::BufHasher::with_capacity_and_seed","value":"fn (capacity: usize, seed: Option<Self::Seed>) -> Self","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Constructs a buffered hasher with capacity and seed\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5045,"byte_end":5048,"line_start":71,"line_end":71,"column_start":8,"column_end":11},"name":"len","qualname":"::hasher::BufHasher::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Returns the number of bytes in the buffer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5028,"byte_end":5037,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5178,"byte_end":5186,"line_start":77,"line_end":77,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::hasher::BufHasher::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Returns `true` if the slice has a length of 0.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5161,"byte_end":5170,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5311,"byte_end":5319,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::hasher::BufHasher::as_slice","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire buffer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5294,"byte_end":5303,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5427,"byte_end":5439,"line_start":89,"line_end":89,"column_start":11,"column_end":23},"name":"StreamHasher","qualname":"::hasher::StreamHasher","value":"StreamHasher: FastHasher + Sized","parent":null,"children":[{"krate":0,"index":74}],"decl_id":null,"docs":" Hasher in the streaming mode without buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5513,"byte_end":5525,"line_start":91,"line_end":91,"column_start":8,"column_end":20},"name":"write_stream","qualname":"::hasher::StreamHasher::write_stream","value":"fn <R> (&mut self, r: &mut R) -> io::Result<usize>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Writes the stream into this hasher.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":6456,"byte_end":6465,"line_start":129,"line_end":129,"column_start":11,"column_end":20},"name":"HasherExt","qualname":"::hasher::HasherExt","value":"HasherExt: Hasher","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" A trait which represents the ability to hash an arbitrary stream of bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":6558,"byte_end":6568,"line_start":131,"line_end":131,"column_start":8,"column_end":18},"name":"finish_ext","qualname":"::hasher::HasherExt::finish_ext","value":"fn (&self) -> u128","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Completes a round of hashing, producing the output hash generated.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":952},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":7983,"byte_end":7987,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"Seed","qualname":"::hasher::Seed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Generate hash seeds","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":7972,"byte_end":8005,"line_start":172,"line_end":172,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":8190,"byte_end":8193,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"gen","qualname":"<Seed>::gen","value":"fn () -> Seed","parent":null,"children":[],"decl_id":null,"docs":" Generate a new seed\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":8169,"byte_end":8178,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":9795,"byte_end":9806,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"RandomState","qualname":"::hasher::RandomState","value":"RandomState {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":37}],"decl_id":null,"docs":" `RandomState` provides the default state for `HashMap` or `HashSet` types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":10007,"byte_end":10010,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<RandomState<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `RandomState` that is initialized with random keys.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":9986,"byte_end":9995,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":114},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"city","qualname":"::city","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/city.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":988},{"krate":0,"index":992},{"krate":0,"index":998},{"krate":0,"index":1006},{"krate":0,"index":1010},{"krate":0,"index":1020},{"krate":0,"index":1026},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1030},{"krate":0,"index":1034},{"krate":0,"index":1040},{"krate":0,"index":1048},{"krate":0,"index":1052},{"krate":0,"index":1062},{"krate":0,"index":1068},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1072},{"krate":0,"index":1076},{"krate":0,"index":1080},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1098},{"krate":0,"index":1102},{"krate":0,"index":1112},{"krate":0,"index":1118},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1122},{"krate":0,"index":1126},{"krate":0,"index":1130},{"krate":0,"index":1136},{"krate":0,"index":1140},{"krate":0,"index":1148},{"krate":0,"index":1152},{"krate":0,"index":1162},{"krate":0,"index":1168},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"decl_id":null,"docs":" `CityHash`, a family of hash functions for strings.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":24899,"byte_end":24909,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"CityHash32","qualname":"::city::CityHash32","value":"CityHash32 {  }","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1014},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25286,"byte_end":25298,"line_start":148,"line_end":148,"column_start":14,"column_end":26},"name":"CityHasher32","qualname":"::city::CityHasher32","value":"CityHasher32 {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":261}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25362,"byte_end":25372,"line_start":151,"line_end":151,"column_start":12,"column_end":22},"name":"CityHash64","qualname":"::city::CityHash64","value":"CityHash64 {  }","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25525,"byte_end":25540,"line_start":157,"line_end":157,"column_start":12,"column_end":27},"name":"hash_with_seeds","qualname":"<CityHash64>::hash_with_seeds","value":"fn <T> (bytes: &T, seed0: u64, seed1: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Hash functions for a byte array.\n For convenience, seeds are also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25504,"byte_end":25513,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":26468,"byte_end":26480,"line_start":192,"line_end":192,"column_start":14,"column_end":26},"name":"CityHasher64","qualname":"::city::CityHasher64","value":"CityHasher64 {  }","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":269}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":26545,"byte_end":26556,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"CityHash128","qualname":"::city::CityHash128","value":"CityHash128 {  }","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 128-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1106},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":27224,"byte_end":27237,"line_start":223,"line_end":223,"column_start":18,"column_end":31},"name":"CityHasher128","qualname":"::city::CityHasher128","value":"CityHasher128 {  }","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":277}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":164},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":27355,"byte_end":27369,"line_start":227,"line_end":227,"column_start":12,"column_end":26},"name":"CityHashCrc128","qualname":"::city::CityHashCrc128","value":"CityHashCrc128 {  }","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 128-bit hash functions using HW CRC instruction.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sse42\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":27318,"byte_end":27343,"line_start":226,"line_end":226,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28098,"byte_end":28114,"line_start":257,"line_end":257,"column_start":18,"column_end":34},"name":"CityHasherCrc128","qualname":"::city::CityHasherCrc128","value":"CityHasherCrc128 {  }","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":285}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28206,"byte_end":28212,"line_start":261,"line_end":261,"column_start":8,"column_end":14},"name":"hash32","qualname":"::city::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 32-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28189,"byte_end":28198,"line_start":260,"line_end":260,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":178},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28410,"byte_end":28426,"line_start":268,"line_end":268,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::city::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 32-bit hash function for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28393,"byte_end":28402,"line_start":267,"line_end":267,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28585,"byte_end":28591,"line_start":274,"line_end":274,"column_start":8,"column_end":14},"name":"hash64","qualname":"::city::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 64-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28568,"byte_end":28577,"line_start":273,"line_end":273,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28789,"byte_end":28805,"line_start":281,"line_end":281,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::city::hash64_with_seed","value":"fn <T> (v: &T, seed: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 64-bit hash function for a byte array.\n For convenience, a 64-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":28772,"byte_end":28781,"line_start":280,"line_end":280,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":29027,"byte_end":29044,"line_start":288,"line_end":288,"column_start":8,"column_end":25},"name":"hash64_with_seeds","qualname":"::city::hash64_with_seeds","value":"fn <T> (v: &T, seed0: u64, seed1: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 64-bit hash function for a byte array.\n For convenience, two seeds are also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":29010,"byte_end":29019,"line_start":287,"line_end":287,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":29802,"byte_end":29809,"line_start":311,"line_end":311,"column_start":8,"column_end":15},"name":"hash128","qualname":"::city::hash128","value":"fn <T> (v: &T) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 128-bit hash function for a byte array using HW CRC instruction.\n That require SSE4.2 instructions to be available.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"doc\", feature = \"sse42\"))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":29737,"byte_end":29784,"line_start":309,"line_end":309,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":29785,"byte_end":29794,"line_start":310,"line_end":310,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":30141,"byte_end":30158,"line_start":320,"line_end":320,"column_start":8,"column_end":25},"name":"hash128_with_seed","qualname":"::city::hash128_with_seed","value":"fn <T> (v: &T, seed: u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `CityHash` 128-bit hash function for a byte array using HW CRC instruction.\n For convenience, a 128-bit seed is also hashed into the result.\n That require SSE4.2 instructions to be available.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"doc\", feature = \"sse42\"))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":30076,"byte_end":30123,"line_start":318,"line_end":318,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":30124,"byte_end":30133,"line_start":319,"line_end":319,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":190},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"farm","qualname":"::farm","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/farm.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1172},{"krate":0,"index":1176},{"krate":0,"index":1182},{"krate":0,"index":1190},{"krate":0,"index":1194},{"krate":0,"index":1204},{"krate":0,"index":1210},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1214},{"krate":0,"index":1218},{"krate":0,"index":1224},{"krate":0,"index":1232},{"krate":0,"index":1236},{"krate":0,"index":1246},{"krate":0,"index":1252},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1256},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1270},{"krate":0,"index":1274},{"krate":0,"index":1282},{"krate":0,"index":1286},{"krate":0,"index":1296},{"krate":0,"index":1302},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":268}],"decl_id":null,"docs":" `FarmHash`, a family of hash functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":38759,"byte_end":38769,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"FarmHash32","qualname":"::farm::FarmHash32","value":"FarmHash32 {  }","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1198},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39312,"byte_end":39324,"line_start":151,"line_end":151,"column_start":14,"column_end":26},"name":"FarmHasher32","qualname":"::farm::FarmHasher32","value":"FarmHasher32 {  }","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":293}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39388,"byte_end":39398,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"FarmHash64","qualname":"::farm::FarmHash64","value":"FarmHash64 {  }","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39551,"byte_end":39566,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"hash_with_seeds","qualname":"<FarmHash64>::hash_with_seeds","value":"fn <T> (bytes: &T, seed0: u64, seed1: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Hash functions for a byte array.\n For convenience, seeds are also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39530,"byte_end":39539,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":40393,"byte_end":40405,"line_start":193,"line_end":193,"column_start":14,"column_end":26},"name":"FarmHasher64","qualname":"::farm::FarmHasher64","value":"FarmHasher64 {  }","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":301}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":40470,"byte_end":40481,"line_start":196,"line_end":196,"column_start":12,"column_end":23},"name":"FarmHash128","qualname":"::farm::FarmHash128","value":"FarmHash128 {  }","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 128-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1290},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":41151,"byte_end":41164,"line_start":224,"line_end":224,"column_start":18,"column_end":31},"name":"FarmHasher128","qualname":"::farm::FarmHasher128","value":"FarmHasher128 {  }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":309}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":41361,"byte_end":41367,"line_start":231,"line_end":231,"column_start":8,"column_end":14},"name":"hash32","qualname":"::farm::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 32-bit hash function for a byte array.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":41344,"byte_end":41353,"line_start":230,"line_end":230,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":41674,"byte_end":41690,"line_start":241,"line_end":241,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::farm::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 32-bit hash function for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":41657,"byte_end":41666,"line_start":240,"line_end":240,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":41953,"byte_end":41959,"line_start":249,"line_end":249,"column_start":8,"column_end":14},"name":"hash64","qualname":"::farm::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 64-bit hash function for a byte array.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":41936,"byte_end":41945,"line_start":248,"line_end":248,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":42266,"byte_end":42282,"line_start":259,"line_end":259,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::farm::hash64_with_seed","value":"fn <T> (v: &T, seed: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 64-bit hash function for a byte array.\n For convenience, a 64-bit seed is also hashed into the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":42249,"byte_end":42258,"line_start":258,"line_end":258,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":42603,"byte_end":42620,"line_start":268,"line_end":268,"column_start":8,"column_end":25},"name":"hash64_with_seeds","qualname":"::farm::hash64_with_seeds","value":"fn <T> (v: &T, seed0: u64, seed1: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 64-bit hash function for a byte array.\n For convenience, two seeds are also hashed into the result.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":42910,"byte_end":42917,"line_start":277,"line_end":277,"column_start":8,"column_end":15},"name":"hash128","qualname":"::farm::hash128","value":"fn <T> (v: &T) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 128-bit hash function for a byte array.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":42893,"byte_end":42902,"line_start":276,"line_end":276,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43228,"byte_end":43245,"line_start":287,"line_end":287,"column_start":8,"column_end":25},"name":"hash128_with_seed","qualname":"::farm::hash128_with_seed","value":"fn <T> (v: &T, seed: u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 128-bit hash function for a byte array.\n For convenience, a 128-bit seed is also hashed into the result.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43211,"byte_end":43220,"line_start":286,"line_end":286,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":258},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43413,"byte_end":43426,"line_start":293,"line_end":293,"column_start":8,"column_end":21},"name":"fingerprint32","qualname":"::farm::fingerprint32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 32-bit fingerprint function for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43396,"byte_end":43405,"line_start":292,"line_end":292,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43635,"byte_end":43648,"line_start":299,"line_end":299,"column_start":8,"column_end":21},"name":"fingerprint64","qualname":"::farm::fingerprint64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 64-bit fingerprint function for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43618,"byte_end":43627,"line_start":298,"line_end":298,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43858,"byte_end":43872,"line_start":305,"line_end":305,"column_start":8,"column_end":22},"name":"fingerprint128","qualname":"::farm::fingerprint128","value":"fn <T> (v: &T) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `FarmHash` 128-bit fingerprint function for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":43841,"byte_end":43850,"line_start":304,"line_end":304,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":272},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lookup3","qualname":"::lookup3","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/lookup3.rs","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1306},{"krate":0,"index":1310},{"krate":0,"index":1316},{"krate":0,"index":1324},{"krate":0,"index":1328},{"krate":0,"index":1338},{"krate":0,"index":1344},{"krate":0,"index":294},{"krate":0,"index":296}],"decl_id":null,"docs":" `Lookup3`, non-cryptographic hash.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":47361,"byte_end":47368,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"Lookup3","qualname":"::lookup3::Lookup3","value":"Lookup3 {  }","parent":null,"children":[],"decl_id":null,"docs":" `Lookup3` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":47729,"byte_end":47742,"line_start":49,"line_end":49,"column_start":14,"column_end":27},"name":"Lookup3Hasher","qualname":"::lookup3::Lookup3Hasher","value":"Lookup3Hasher {  }","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":317}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":294},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":47826,"byte_end":47832,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"hash32","qualname":"::lookup3::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `Lookup3` 32-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":47809,"byte_end":47818,"line_start":52,"line_end":52,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":296},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":48026,"byte_end":48042,"line_start":60,"line_end":60,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::lookup3::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `Lookup3` 32-bit hash function for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":48009,"byte_end":48018,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":298},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metro","qualname":"::metro","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/metro.rs","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1348},{"krate":0,"index":1352},{"krate":0,"index":1358},{"krate":0,"index":1366},{"krate":0,"index":1370},{"krate":0,"index":1380},{"krate":0,"index":1386},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1390},{"krate":0,"index":1394},{"krate":0,"index":1400},{"krate":0,"index":1408},{"krate":0,"index":1412},{"krate":0,"index":1422},{"krate":0,"index":1428},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1432},{"krate":0,"index":1436},{"krate":0,"index":1440},{"krate":0,"index":1446},{"krate":0,"index":1450},{"krate":0,"index":1458},{"krate":0,"index":1462},{"krate":0,"index":1472},{"krate":0,"index":1478},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1482},{"krate":0,"index":1486},{"krate":0,"index":1490},{"krate":0,"index":1496},{"krate":0,"index":1500},{"krate":0,"index":1508},{"krate":0,"index":1512},{"krate":0,"index":1522},{"krate":0,"index":1528},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1532},{"krate":0,"index":1536},{"krate":0,"index":1542},{"krate":0,"index":1550},{"krate":0,"index":1554},{"krate":0,"index":1564},{"krate":0,"index":1570},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1574},{"krate":0,"index":1578},{"krate":0,"index":1584},{"krate":0,"index":1592},{"krate":0,"index":1596},{"krate":0,"index":1606},{"krate":0,"index":1612},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1616},{"krate":0,"index":1620},{"krate":0,"index":1624},{"krate":0,"index":1630},{"krate":0,"index":1634},{"krate":0,"index":1642},{"krate":0,"index":1646},{"krate":0,"index":1656},{"krate":0,"index":1662},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1666},{"krate":0,"index":1670},{"krate":0,"index":1674},{"krate":0,"index":1680},{"krate":0,"index":1684},{"krate":0,"index":1692},{"krate":0,"index":1696},{"krate":0,"index":1706},{"krate":0,"index":1712},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394}],"decl_id":null,"docs":" `MetroHash`, Exceptionally fast and statistically robust hash functions","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50087,"byte_end":50118,"line_start":42,"line_end":42,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50216,"byte_end":50229,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"MetroHash64_1","qualname":"::metro::MetroHash64_1","value":"MetroHash64_1 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1374},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50707,"byte_end":50722,"line_start":72,"line_end":72,"column_start":14,"column_end":29},"name":"MetroHasher64_1","qualname":"::metro::MetroHasher64_1","value":"MetroHasher64_1 {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":325}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50790,"byte_end":50803,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"MetroHash64_2","qualname":"::metro::MetroHash64_2","value":"MetroHash64_2 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1416},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51281,"byte_end":51296,"line_start":98,"line_end":98,"column_start":14,"column_end":29},"name":"MetroHasher64_2","qualname":"::metro::MetroHasher64_2","value":"MetroHasher64_2 {  }","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":333}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":328},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51365,"byte_end":51379,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"MetroHash128_1","qualname":"::metro::MetroHash128_1","value":"MetroHash128_1 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 128-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1466},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51862,"byte_end":51878,"line_start":124,"line_end":124,"column_start":18,"column_end":34},"name":"MetroHasher128_1","qualname":"::metro::MetroHasher128_1","value":"MetroHasher128_1 {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":341}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51948,"byte_end":51962,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"MetroHash128_2","qualname":"::metro::MetroHash128_2","value":"MetroHash128_2 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 128-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1516},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":52445,"byte_end":52461,"line_start":150,"line_end":150,"column_start":18,"column_end":34},"name":"MetroHasher128_2","qualname":"::metro::MetroHasher128_2","value":"MetroHasher128_2 {  }","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":349}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":52582,"byte_end":52598,"line_start":154,"line_end":154,"column_start":12,"column_end":28},"name":"MetroHash64Crc_1","qualname":"::metro::MetroHash64Crc_1","value":"MetroHash64Crc_1 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 64-bit hash functions using HW CRC instruction.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sse42\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":52545,"byte_end":52570,"line_start":153,"line_end":153,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1558},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53134,"byte_end":53152,"line_start":179,"line_end":179,"column_start":14,"column_end":32},"name":"MetroHasher64Crc_1","qualname":"::metro::MetroHasher64Crc_1","value":"MetroHasher64Crc_1 {  }","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":357}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53275,"byte_end":53291,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"MetroHash64Crc_2","qualname":"::metro::MetroHash64Crc_2","value":"MetroHash64Crc_2 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 64-bit hash functions using HW CRC instruction.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sse42\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53238,"byte_end":53263,"line_start":182,"line_end":182,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1600},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53827,"byte_end":53845,"line_start":208,"line_end":208,"column_start":14,"column_end":32},"name":"MetroHasher64Crc_2","qualname":"::metro::MetroHasher64Crc_2","value":"MetroHasher64Crc_2 {  }","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53969,"byte_end":53986,"line_start":212,"line_end":212,"column_start":12,"column_end":29},"name":"MetroHash128Crc_1","qualname":"::metro::MetroHash128Crc_1","value":"MetroHash128Crc_1 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 128-bit hash functions using HW CRC instruction.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sse42\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53932,"byte_end":53957,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1650},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":54527,"byte_end":54546,"line_start":237,"line_end":237,"column_start":18,"column_end":37},"name":"MetroHasher128Crc_1","qualname":"::metro::MetroHasher128Crc_1","value":"MetroHasher128Crc_1 {  }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":373}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":54671,"byte_end":54688,"line_start":241,"line_end":241,"column_start":12,"column_end":29},"name":"MetroHash128Crc_2","qualname":"::metro::MetroHash128Crc_2","value":"MetroHash128Crc_2 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 128-bit hash functions using HW CRC instruction.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sse42\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":54634,"byte_end":54659,"line_start":240,"line_end":240,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1700},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":55229,"byte_end":55248,"line_start":266,"line_end":266,"column_start":18,"column_end":37},"name":"MetroHasher128Crc_2","qualname":"::metro::MetroHasher128Crc_2","value":"MetroHasher128Crc_2 {  }","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":381}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":388},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56321,"byte_end":56327,"line_start":301,"line_end":301,"column_start":8,"column_end":14},"name":"hash64","qualname":"::metro::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 64-bit hash function for a byte array using HW CRC instruction.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"doc\", feature = \"sse42\"))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56256,"byte_end":56303,"line_start":299,"line_end":299,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56304,"byte_end":56313,"line_start":300,"line_end":300,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":390},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56605,"byte_end":56621,"line_start":309,"line_end":309,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::metro::hash64_with_seed","value":"fn <T> (v: &T, seed: u32) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 64-bit hash function for a byte array using HW CRC instruction.\n For convenience, a 64-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"doc\", feature = \"sse42\"))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56540,"byte_end":56587,"line_start":307,"line_end":307,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56588,"byte_end":56597,"line_start":308,"line_end":308,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56860,"byte_end":56867,"line_start":316,"line_end":316,"column_start":8,"column_end":15},"name":"hash128","qualname":"::metro::hash128","value":"fn <T> (v: &T) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 128-bit hash function for a byte array using HW CRC instruction.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"doc\", feature = \"sse42\"))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56795,"byte_end":56842,"line_start":314,"line_end":314,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":56843,"byte_end":56852,"line_start":315,"line_end":315,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":57150,"byte_end":57167,"line_start":324,"line_end":324,"column_start":8,"column_end":25},"name":"hash128_with_seed","qualname":"::metro::hash128_with_seed","value":"fn <T> (v: &T, seed: u32) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `MetroHash` 128-bit hash function for a byte array. using HW CRC instruction.\n For convenience, a 128-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"cfg(any(feature = \"doc\", feature = \"sse42\"))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":57085,"byte_end":57132,"line_start":322,"line_end":322,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":57133,"byte_end":57142,"line_start":323,"line_end":323,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":396},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mum","qualname":"::mum","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/mum.rs","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":1742},{"krate":0,"index":1744},{"krate":0,"index":1716},{"krate":0,"index":1720},{"krate":0,"index":1726},{"krate":0,"index":1734},{"krate":0,"index":1738},{"krate":0,"index":1748},{"krate":0,"index":1754},{"krate":0,"index":418},{"krate":0,"index":420}],"decl_id":null,"docs":" `MumHash`, Hashing functions and PRNGs based on them","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":64890,"byte_end":64921,"line_start":55,"line_end":55,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65043,"byte_end":65050,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"MumHash","qualname":"::mum::MumHash","value":"MumHash {  }","parent":null,"children":[],"decl_id":null,"docs":" `MumHash` 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65410,"byte_end":65419,"line_start":79,"line_end":79,"column_start":14,"column_end":23},"name":"MumHasher","qualname":"::mum::MumHasher","value":"MumHasher {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":389}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":418},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65503,"byte_end":65509,"line_start":83,"line_end":83,"column_start":8,"column_end":14},"name":"hash64","qualname":"::mum::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `MumHash` 64-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65486,"byte_end":65495,"line_start":82,"line_end":82,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":420},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65703,"byte_end":65719,"line_start":90,"line_end":90,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::mum::hash64_with_seed","value":"fn <T> (v: &T, seed: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `MumHash` 64-bit hash function for a byte array.\n For convenience, a 64-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65686,"byte_end":65695,"line_start":89,"line_end":89,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":422},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"murmur","qualname":"::murmur","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/murmur.rs","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1758},{"krate":0,"index":1762},{"krate":0,"index":1768},{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1790},{"krate":0,"index":1796},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1800},{"krate":0,"index":1804},{"krate":0,"index":1810},{"krate":0,"index":1818},{"krate":0,"index":1822},{"krate":0,"index":1832},{"krate":0,"index":1838},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460}],"decl_id":null,"docs":" `Murmur`, a suite of non-cryptographic hash functions that was used for hash-based lookups.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":434},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":67802,"byte_end":67808,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Murmur","qualname":"::murmur::Murmur","value":"Murmur {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1784},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68180,"byte_end":68192,"line_start":66,"line_end":66,"column_start":14,"column_end":26},"name":"MurmurHasher","qualname":"::murmur::MurmurHasher","value":"MurmurHasher {  }","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":397}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68262,"byte_end":68275,"line_start":69,"line_end":69,"column_start":12,"column_end":25},"name":"MurmurAligned","qualname":"::murmur::MurmurAligned","value":"MurmurAligned {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash` 32-bit aligned hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1826},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68675,"byte_end":68694,"line_start":85,"line_end":85,"column_start":14,"column_end":33},"name":"MurmurAlignedHasher","qualname":"::murmur::MurmurAlignedHasher","value":"MurmurAlignedHasher {  }","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":405}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":454},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68787,"byte_end":68793,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"hash32","qualname":"::murmur::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash` 32-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68770,"byte_end":68779,"line_start":88,"line_end":88,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68989,"byte_end":69005,"line_start":96,"line_end":96,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::murmur::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash` 32-bit hash function for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68972,"byte_end":68981,"line_start":95,"line_end":95,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":458},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":69170,"byte_end":69184,"line_start":102,"line_end":102,"column_start":8,"column_end":22},"name":"hash32_aligned","qualname":"::murmur::hash32_aligned","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash` 32-bit aligned hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":69153,"byte_end":69162,"line_start":101,"line_end":101,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":69395,"byte_end":69419,"line_start":109,"line_end":109,"column_start":8,"column_end":32},"name":"hash32_aligned_with_seed","qualname":"::murmur::hash32_aligned_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash` 32-bit aligned hash function for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":69378,"byte_end":69387,"line_start":108,"line_end":108,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":462},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"murmur2","qualname":"::murmur2","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/murmur2.rs","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1852},{"krate":0,"index":1860},{"krate":0,"index":1864},{"krate":0,"index":1874},{"krate":0,"index":1880},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1884},{"krate":0,"index":1888},{"krate":0,"index":1894},{"krate":0,"index":1902},{"krate":0,"index":1906},{"krate":0,"index":1916},{"krate":0,"index":1922},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1926},{"krate":0,"index":1930},{"krate":0,"index":1936},{"krate":0,"index":1944},{"krate":0,"index":1948},{"krate":0,"index":1958},{"krate":0,"index":1964},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":1994},{"krate":0,"index":1996},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1978},{"krate":0,"index":1986},{"krate":0,"index":1990},{"krate":0,"index":2000},{"krate":0,"index":2006},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2010},{"krate":0,"index":2014},{"krate":0,"index":2020},{"krate":0,"index":2028},{"krate":0,"index":2032},{"krate":0,"index":2042},{"krate":0,"index":2048},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2052},{"krate":0,"index":2056},{"krate":0,"index":2062},{"krate":0,"index":2070},{"krate":0,"index":2074},{"krate":0,"index":2084},{"krate":0,"index":2090},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540}],"decl_id":null,"docs":" `Murmur2`, a suite of  non-cryptographic hash functions that was used for hash-based lookups.","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":72973,"byte_end":73004,"line_start":66,"line_end":66,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73130,"byte_end":73137,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"Murmur2","qualname":"::murmur2::Murmur2","value":"Murmur2 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73510,"byte_end":73523,"line_start":90,"line_end":90,"column_start":14,"column_end":27},"name":"Murmur2Hasher","qualname":"::murmur2::Murmur2Hasher","value":"Murmur2Hasher {  }","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":413}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73588,"byte_end":73596,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"Murmur2A","qualname":"::murmur2::Murmur2A","value":"Murmur2A {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2A` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1910},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73973,"byte_end":73987,"line_start":109,"line_end":109,"column_start":14,"column_end":28},"name":"Murmur2AHasher","qualname":"::murmur2::Murmur2AHasher","value":"Murmur2AHasher {  }","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":421}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":74107,"byte_end":74121,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"MurmurNeutral2","qualname":"::murmur2::MurmurNeutral2","value":"MurmurNeutral2 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 32-bit neutral hash functions for the (slower) endian-neutral implementation\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":74522,"byte_end":74542,"line_start":128,"line_end":128,"column_start":14,"column_end":34},"name":"MurmurNeutral2Hasher","qualname":"::murmur2::MurmurNeutral2Hasher","value":"MurmurNeutral2Hasher {  }","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":429}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":504},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":74680,"byte_end":74694,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"MurmurAligned2","qualname":"::murmur2::MurmurAligned2","value":"MurmurAligned2 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 32-bit aligned hash functions\n for the little-endian aligned-read-only implementation\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1994},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75095,"byte_end":75115,"line_start":148,"line_end":148,"column_start":14,"column_end":34},"name":"MurmurAligned2Hasher","qualname":"::murmur2::MurmurAligned2Hasher","value":"MurmurAligned2Hasher {  }","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":437}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75208,"byte_end":75222,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"Murmur2_x64_64","qualname":"::murmur2::Murmur2_x64_64","value":"Murmur2_x64_64 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 64-bit hash functions for 64-bit processors\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2036},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75608,"byte_end":75628,"line_start":167,"line_end":167,"column_start":14,"column_end":34},"name":"Murmur2Hasher_x64_64","qualname":"::murmur2::Murmur2Hasher_x64_64","value":"Murmur2Hasher_x64_64 {  }","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":445}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":524},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75721,"byte_end":75735,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"Murmur2_x86_64","qualname":"::murmur2::Murmur2_x86_64","value":"Murmur2_x86_64 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 64-bit hash functions for 32-bit processors\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2078},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76121,"byte_end":76141,"line_start":186,"line_end":186,"column_start":14,"column_end":34},"name":"Murmur2Hasher_x86_64","qualname":"::murmur2::Murmur2Hasher_x86_64","value":"Murmur2Hasher_x86_64 {  }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":453}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":534},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76236,"byte_end":76242,"line_start":190,"line_end":190,"column_start":8,"column_end":14},"name":"hash32","qualname":"::murmur2::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 32-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76219,"byte_end":76228,"line_start":189,"line_end":189,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":536},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76441,"byte_end":76457,"line_start":197,"line_end":197,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::murmur2::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 32-bit hash function for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76424,"byte_end":76433,"line_start":196,"line_end":196,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":538},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76617,"byte_end":76623,"line_start":203,"line_end":203,"column_start":8,"column_end":14},"name":"hash64","qualname":"::murmur2::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 64-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76600,"byte_end":76609,"line_start":202,"line_end":202,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":540},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76828,"byte_end":76844,"line_start":210,"line_end":210,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::murmur2::hash64_with_seed","value":"fn <T> (v: &T, seed: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash2` 64-bit hash function for a byte array.\n For convenience, a 64-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":76811,"byte_end":76820,"line_start":209,"line_end":209,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":542},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"murmur3","qualname":"::murmur3","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/murmur3.rs","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2094},{"krate":0,"index":2098},{"krate":0,"index":2104},{"krate":0,"index":2112},{"krate":0,"index":2116},{"krate":0,"index":2126},{"krate":0,"index":2132},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2136},{"krate":0,"index":2140},{"krate":0,"index":2144},{"krate":0,"index":2150},{"krate":0,"index":2154},{"krate":0,"index":2162},{"krate":0,"index":2166},{"krate":0,"index":2176},{"krate":0,"index":2182},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2186},{"krate":0,"index":2190},{"krate":0,"index":2194},{"krate":0,"index":2200},{"krate":0,"index":2204},{"krate":0,"index":2212},{"krate":0,"index":2216},{"krate":0,"index":2226},{"krate":0,"index":2232},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590}],"decl_id":null,"docs":" `Murmur3`, a suite of non-cryptographic hash functions that was used for hash-based lookups.","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":80714,"byte_end":80745,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":80871,"byte_end":80885,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"Murmur3_x86_32","qualname":"::murmur3::Murmur3_x86_32","value":"Murmur3_x86_32 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash3` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":81385,"byte_end":81405,"line_start":63,"line_end":63,"column_start":14,"column_end":34},"name":"Murmur3Hasher_x86_32","qualname":"::murmur3::Murmur3Hasher_x86_32","value":"Murmur3Hasher_x86_32 {  }","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":461}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":81499,"byte_end":81514,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"Murmur3_x86_128","qualname":"::murmur3::Murmur3_x86_128","value":"Murmur3_x86_128 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash3` 128-bit hash functions for 32-bit processors\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2170},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82019,"byte_end":82040,"line_start":89,"line_end":89,"column_start":18,"column_end":39},"name":"Murmur3Hasher_x86_128","qualname":"::murmur3::Murmur3Hasher_x86_128","value":"Murmur3Hasher_x86_128 {  }","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":469}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":574},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82135,"byte_end":82150,"line_start":92,"line_end":92,"column_start":12,"column_end":27},"name":"Murmur3_x64_128","qualname":"::murmur3::Murmur3_x64_128","value":"Murmur3_x64_128 {  }","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash3` 128-bit hash functions for 64-bit processors\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2220},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82655,"byte_end":82676,"line_start":115,"line_end":115,"column_start":18,"column_end":39},"name":"Murmur3Hasher_x64_128","qualname":"::murmur3::Murmur3Hasher_x64_128","value":"Murmur3Hasher_x64_128 {  }","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":477}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82772,"byte_end":82778,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"hash32","qualname":"::murmur3::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash3` 32-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82755,"byte_end":82764,"line_start":118,"line_end":118,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82984,"byte_end":83000,"line_start":126,"line_end":126,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::murmur3::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash3` 32-bit hash functions for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82967,"byte_end":82976,"line_start":125,"line_end":125,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":83167,"byte_end":83174,"line_start":132,"line_end":132,"column_start":8,"column_end":15},"name":"hash128","qualname":"::murmur3::hash128","value":"fn <T> (v: &T) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash3` 128-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":83150,"byte_end":83159,"line_start":131,"line_end":131,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":83383,"byte_end":83400,"line_start":139,"line_end":139,"column_start":8,"column_end":25},"name":"hash128_with_seed","qualname":"::murmur3::hash128_with_seed","value":"fn <T> (v: &T, seed: u32) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `MurmurHash3` 128-bit hash functions for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":83366,"byte_end":83375,"line_start":138,"line_end":138,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":592},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sea","qualname":"::sea","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/sea.rs","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":604},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":2236},{"krate":0,"index":2242},{"krate":0,"index":624},{"krate":0,"index":632}],"decl_id":null,"docs":" `SeaHash`: A bizarrely fast hash function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86402,"byte_end":86409,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"SeaHash","qualname":"::sea::SeaHash","value":"SeaHash {  }","parent":null,"children":[],"decl_id":null,"docs":" `SeaHash` 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":634},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spooky","qualname":"::spooky","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/spooky.rs","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":2246},{"krate":0,"index":2252},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":2256},{"krate":0,"index":2262},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":688},{"krate":0,"index":692},{"krate":0,"index":698},{"krate":0,"index":702},{"krate":0,"index":708},{"krate":0,"index":2266},{"krate":0,"index":2272},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720}],"decl_id":null,"docs":" `SpookyHash`: a 128-bit noncryptographic hash function","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":652},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":89718,"byte_end":89730,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"SpookyHash32","qualname":"::spooky::SpookyHash32","value":"SpookyHash32 {  }","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":662},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":90336,"byte_end":90348,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"SpookyHash64","qualname":"::spooky::SpookyHash64","value":"SpookyHash64 {  }","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":90926,"byte_end":90939,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"SpookyHash128","qualname":"::spooky::SpookyHash128","value":"SpookyHash128 {  }","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 128-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":682},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":91559,"byte_end":91574,"line_start":134,"line_end":134,"column_start":12,"column_end":27},"name":"SpookyHasher128","qualname":"::spooky::SpookyHasher128","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":710},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92859,"byte_end":92865,"line_start":196,"line_end":196,"column_start":8,"column_end":14},"name":"hash32","qualname":"::spooky::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 32-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92842,"byte_end":92851,"line_start":195,"line_end":195,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":712},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93068,"byte_end":93084,"line_start":203,"line_end":203,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::spooky::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 32-bit hash functions for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93051,"byte_end":93060,"line_start":202,"line_end":202,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":714},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93314,"byte_end":93320,"line_start":210,"line_end":210,"column_start":8,"column_end":14},"name":"hash64","qualname":"::spooky::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 64-bit hash functions for a byte array.\n For convenience, a 64-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93297,"byte_end":93306,"line_start":209,"line_end":209,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":716},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93456,"byte_end":93472,"line_start":216,"line_end":216,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::spooky::hash64_with_seed","value":"fn <T> (v: &T, seed: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 64-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93439,"byte_end":93448,"line_start":215,"line_end":215,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":718},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93704,"byte_end":93711,"line_start":223,"line_end":223,"column_start":8,"column_end":15},"name":"hash128","qualname":"::spooky::hash128","value":"fn <T> (v: &T) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 128-bit hash functions for a byte array.\n For convenience, a 128-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93687,"byte_end":93696,"line_start":222,"line_end":222,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":720},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93850,"byte_end":93867,"line_start":229,"line_end":229,"column_start":8,"column_end":25},"name":"hash128_with_seed","qualname":"::spooky::hash128_with_seed","value":"fn <T> (v: &T, seed: u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" `SpookyHash` 128-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":93833,"byte_end":93842,"line_start":228,"line_end":228,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":722},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"t1ha","qualname":"::t1ha","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/t1ha.rs","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2276},{"krate":0,"index":2280},{"krate":0,"index":2286},{"krate":0,"index":2294},{"krate":0,"index":2298},{"krate":0,"index":2308},{"krate":0,"index":2314},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2318},{"krate":0,"index":2322},{"krate":0,"index":2326},{"krate":0,"index":2332},{"krate":0,"index":2336},{"krate":0,"index":2344},{"krate":0,"index":2348},{"krate":0,"index":2358},{"krate":0,"index":2364},{"krate":0,"index":754},{"krate":0,"index":756},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2368},{"krate":0,"index":2372},{"krate":0,"index":2378},{"krate":0,"index":2386},{"krate":0,"index":2390},{"krate":0,"index":2400},{"krate":0,"index":2406},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":2436},{"krate":0,"index":2438},{"krate":0,"index":2410},{"krate":0,"index":2414},{"krate":0,"index":2420},{"krate":0,"index":2428},{"krate":0,"index":2432},{"krate":0,"index":2442},{"krate":0,"index":2448},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2452},{"krate":0,"index":2456},{"krate":0,"index":2462},{"krate":0,"index":2470},{"krate":0,"index":2474},{"krate":0,"index":2484},{"krate":0,"index":2490},{"krate":0,"index":784},{"krate":0,"index":786}],"decl_id":null,"docs":" Fast Positive Hash, aka \"Позитивный Хэш\"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":97276,"byte_end":97284,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"T1ha2_64","qualname":"::t1ha::T1ha2_64","value":"T1ha2_64 {  }","parent":null,"children":[],"decl_id":null,"docs":" The at-once variant with 64-bit result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2302},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":97657,"byte_end":97670,"line_start":74,"line_end":74,"column_start":14,"column_end":27},"name":"T1ha2Hasher64","qualname":"::t1ha::T1ha2Hasher64","value":"T1ha2Hasher64 {  }","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":485}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":97738,"byte_end":97747,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"T1ha2_128","qualname":"::t1ha::T1ha2_128","value":"T1ha2_128 {  }","parent":null,"children":[],"decl_id":null,"docs":" The at-once variant with 64-bit result\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2352},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98248,"byte_end":98262,"line_start":100,"line_end":100,"column_start":18,"column_end":32},"name":"T1ha2Hasher128","qualname":"::t1ha::T1ha2Hasher128","value":"T1ha2Hasher128 {  }","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":493}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher` and `fasthash::HasherExt`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98359,"byte_end":98369,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"T1ha1_64Le","qualname":"::t1ha::T1ha1_64Le","value":"T1ha1_64Le {  }","parent":null,"children":[],"decl_id":null,"docs":" `T1Hash` 64-bit hash functions for 64-bit little-endian platforms.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2394},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98740,"byte_end":98755,"line_start":121,"line_end":121,"column_start":14,"column_end":29},"name":"T1ha1Hasher64Le","qualname":"::t1ha::T1ha1Hasher64Le","value":"T1ha1Hasher64Le {  }","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":501}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":764},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98850,"byte_end":98860,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"T1ha1_64Be","qualname":"::t1ha::T1ha1_64Be","value":"T1ha1_64Be {  }","parent":null,"children":[],"decl_id":null,"docs":" `T1Hash` 64-bit hash functions for 64-bit big-endian platforms.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2436},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99231,"byte_end":99246,"line_start":142,"line_end":142,"column_start":14,"column_end":29},"name":"T1ha1Hasher64Be","qualname":"::t1ha::T1ha1Hasher64Be","value":"T1ha1Hasher64Be {  }","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":509}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":774},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99309,"byte_end":99317,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"T1ha0_64","qualname":"::t1ha::T1ha0_64","value":"T1ha0_64 {  }","parent":null,"children":[],"decl_id":null,"docs":" `T1Hash` 64-bit hash functions.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2478},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99686,"byte_end":99699,"line_start":163,"line_end":163,"column_start":14,"column_end":27},"name":"T1ha0Hasher64","qualname":"::t1ha::T1ha0Hasher64","value":"T1ha0Hasher64 {  }","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":517}],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":784},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99783,"byte_end":99789,"line_start":167,"line_end":167,"column_start":8,"column_end":14},"name":"hash64","qualname":"::t1ha::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `T1Hash` 64-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99766,"byte_end":99775,"line_start":166,"line_end":166,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":786},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99983,"byte_end":99999,"line_start":174,"line_end":174,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::t1ha::hash64_with_seed","value":"fn <T> (v: &T, seed: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" `T1Hash` 64-bit hash function for a byte array.\n For convenience, a 64-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99966,"byte_end":99975,"line_start":173,"line_end":173,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":788},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xx","qualname":"::xx","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/fasthash-0.3.2/src/xx.rs","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":838},{"krate":0,"index":842},{"krate":0,"index":848},{"krate":0,"index":854},{"krate":0,"index":2494},{"krate":0,"index":2500},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":862},{"krate":0,"index":866},{"krate":0,"index":872},{"krate":0,"index":878},{"krate":0,"index":2504},{"krate":0,"index":2510}],"decl_id":null,"docs":" `xxHash` - Extremely fast hash algorithm","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":804},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":103878,"byte_end":103886,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"XXHash32","qualname":"::xx::XXHash32","value":"XXHash32 {  }","parent":null,"children":[],"decl_id":null,"docs":" xxHash 32-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":104283,"byte_end":104291,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"XXHash64","qualname":"::xx::XXHash64","value":"XXHash64 {  }","parent":null,"children":[],"decl_id":null,"docs":" xxHash 64-bit hash functions\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":824},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":104712,"byte_end":104718,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"hash32","qualname":"::xx::hash32","value":"fn <T> (v: &T) -> u32","parent":null,"children":[],"decl_id":null,"docs":" xxHash 32-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":104695,"byte_end":104704,"line_start":77,"line_end":77,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":826},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":104910,"byte_end":104926,"line_start":85,"line_end":85,"column_start":8,"column_end":24},"name":"hash32_with_seed","qualname":"::xx::hash32_with_seed","value":"fn <T> (v: &T, seed: u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" xxHash 32-bit hash function for a byte array.\n For convenience, a 32-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":104893,"byte_end":104902,"line_start":84,"line_end":84,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105079,"byte_end":105085,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"hash64","qualname":"::xx::hash64","value":"fn <T> (v: &T) -> u64","parent":null,"children":[],"decl_id":null,"docs":" xxHash 64-bit hash functions for a byte array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105062,"byte_end":105071,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105277,"byte_end":105293,"line_start":98,"line_end":98,"column_start":8,"column_end":24},"name":"hash64_with_seed","qualname":"::xx::hash64_with_seed","value":"fn <T> (v: &T, seed: u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" xxHash 64-bit hash function for a byte array.\n For convenience, a 64-bit seed is also hashed into the result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105260,"byte_end":105269,"line_start":97,"line_end":97,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":832},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105435,"byte_end":105445,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"XXHasher32","qualname":"::xx::XXHasher32","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":856},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106406,"byte_end":106416,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"XXHasher64","qualname":"::xx::XXHasher64","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of `std::hash::Hasher`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":8012,"byte_end":8016,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":9888,"byte_end":9899,"line_start":249,"line_end":249,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":10163,"byte_end":10174,"line_start":260,"line_end":260,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":10363,"byte_end":10374,"line_start":269,"line_end":269,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":24932,"byte_end":24942,"line_start":132,"line_end":132,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25382,"byte_end":25392,"line_start":153,"line_end":153,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25845,"byte_end":25855,"line_start":169,"line_end":169,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":26579,"byte_end":26590,"line_start":197,"line_end":197,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":27418,"byte_end":27432,"line_start":230,"line_end":230,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":38792,"byte_end":38802,"line_start":130,"line_end":130,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39408,"byte_end":39418,"line_start":156,"line_end":156,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39873,"byte_end":39883,"line_start":172,"line_end":172,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":40504,"byte_end":40515,"line_start":198,"line_end":198,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":47391,"byte_end":47398,"line_start":35,"line_end":35,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50252,"byte_end":50265,"line_start":51,"line_end":51,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50826,"byte_end":50839,"line_start":77,"line_end":77,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51402,"byte_end":51416,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51985,"byte_end":51999,"line_start":129,"line_end":129,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":52647,"byte_end":52663,"line_start":157,"line_end":157,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53340,"byte_end":53356,"line_start":186,"line_end":186,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":54035,"byte_end":54052,"line_start":215,"line_end":215,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":54737,"byte_end":54754,"line_start":244,"line_end":244,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65073,"byte_end":65080,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":67831,"byte_end":67837,"line_start":52,"line_end":52,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68298,"byte_end":68311,"line_start":71,"line_end":71,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73160,"byte_end":73167,"line_start":76,"line_end":76,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73619,"byte_end":73627,"line_start":95,"line_end":95,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":74144,"byte_end":74158,"line_start":114,"line_end":114,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":74717,"byte_end":74731,"line_start":134,"line_end":134,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75245,"byte_end":75259,"line_start":153,"line_end":153,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75758,"byte_end":75772,"line_start":172,"line_end":172,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":80908,"byte_end":80922,"line_start":42,"line_end":42,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":81537,"byte_end":81552,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82173,"byte_end":82188,"line_start":94,"line_end":94,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86432,"byte_end":86439,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86855,"byte_end":86866,"line_start":54,"line_end":54,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":87133,"byte_end":87144,"line_start":68,"line_end":68,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":89753,"byte_end":89765,"line_start":57,"line_end":57,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":90371,"byte_end":90383,"line_start":84,"line_end":84,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":90962,"byte_end":90975,"line_start":111,"line_end":111,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":91607,"byte_end":91622,"line_start":136,"line_end":136,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":91695,"byte_end":91710,"line_start":142,"line_end":142,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":91826,"byte_end":91841,"line_start":149,"line_end":149,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92107,"byte_end":92122,"line_start":161,"line_end":161,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92407,"byte_end":92422,"line_start":175,"line_end":175,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92716,"byte_end":92731,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":97307,"byte_end":97315,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":97770,"byte_end":97779,"line_start":79,"line_end":79,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98392,"byte_end":98402,"line_start":105,"line_end":105,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98883,"byte_end":98893,"line_start":126,"line_end":126,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99340,"byte_end":99348,"line_start":147,"line_end":147,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":103909,"byte_end":103917,"line_start":41,"line_end":41,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":104314,"byte_end":104322,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105490,"byte_end":105500,"line_start":105,"line_end":105,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105573,"byte_end":105583,"line_start":111,"line_end":111,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105719,"byte_end":105729,"line_start":120,"line_end":120,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106034,"byte_end":106044,"line_start":134,"line_end":134,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106295,"byte_end":106305,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106461,"byte_end":106471,"line_start":156,"line_end":156,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106544,"byte_end":106554,"line_start":162,"line_end":162,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106676,"byte_end":106686,"line_start":170,"line_end":170,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106980,"byte_end":106990,"line_start":184,"line_end":184,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":107241,"byte_end":107251,"line_start":199,"line_end":199,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1669,"byte_end":1673,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":114}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1683,"byte_end":1687,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":190}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1697,"byte_end":1704,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":272}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1714,"byte_end":1719,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":298}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1729,"byte_end":1732,"line_start":70,"line_end":70,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":396}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1742,"byte_end":1748,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":422}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1758,"byte_end":1765,"line_start":72,"line_end":72,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":462}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1775,"byte_end":1782,"line_start":73,"line_end":73,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":542}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1792,"byte_end":1795,"line_start":74,"line_end":74,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":592}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1805,"byte_end":1811,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":634}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1821,"byte_end":1825,"line_start":76,"line_end":76,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":722}},{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1835,"byte_end":1837,"line_start":77,"line_end":77,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":788}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3582,"byte_end":3593,"line_start":20,"line_end":20,"column_start":27,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":7696},"to":{"krate":0,"index":38}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":3694,"byte_end":3708,"line_start":25,"line_end":25,"column_start":21,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":38},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4248,"byte_end":4254,"line_start":42,"line_end":42,"column_start":23,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":7636},"to":{"krate":0,"index":52}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4803,"byte_end":4813,"line_start":65,"line_end":65,"column_start":22,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":52},"to":{"krate":0,"index":62}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":4816,"byte_end":4821,"line_start":65,"line_end":65,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2594},"to":{"krate":0,"index":62}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5441,"byte_end":5451,"line_start":89,"line_end":89,"column_start":25,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":52},"to":{"krate":0,"index":72}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":5454,"byte_end":5459,"line_start":89,"line_end":89,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1678},"to":{"krate":0,"index":72}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":6467,"byte_end":6473,"line_start":129,"line_end":129,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":7636},"to":{"krate":0,"index":76}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":8012,"byte_end":8016,"line_start":174,"line_end":174,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":9888,"byte_end":9899,"line_start":249,"line_end":249,"column_start":19,"column_end":30},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":10163,"byte_end":10174,"line_start":260,"line_end":260,"column_start":35,"column_end":46},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7696}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,104,97,115,104,101,114,46,114,115],"byte_start":10363,"byte_end":10374,"line_start":269,"line_end":269,"column_start":31,"column_end":42},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":92},"to":{"krate":2,"index":2584}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":24932,"byte_end":24942,"line_start":132,"line_end":132,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":126},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25382,"byte_end":25392,"line_start":153,"line_end":153,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":25845,"byte_end":25855,"line_start":169,"line_end":169,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":136},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":26579,"byte_end":26590,"line_start":197,"line_end":197,"column_start":19,"column_end":30},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":152},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,99,105,116,121,46,114,115],"byte_start":27418,"byte_end":27432,"line_start":230,"line_end":230,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":164},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":38792,"byte_end":38802,"line_start":130,"line_end":130,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":204},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39408,"byte_end":39418,"line_start":156,"line_end":156,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":39873,"byte_end":39883,"line_start":172,"line_end":172,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":216},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,102,97,114,109,46,114,115],"byte_start":40504,"byte_end":40515,"line_start":198,"line_end":198,"column_start":19,"column_end":30},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":232},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,108,111,111,107,117,112,51,46,114,115],"byte_start":47391,"byte_end":47398,"line_start":35,"line_end":35,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":284},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50252,"byte_end":50265,"line_start":51,"line_end":51,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":308},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":50826,"byte_end":50839,"line_start":77,"line_end":77,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":318},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51402,"byte_end":51416,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":328},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":51985,"byte_end":51999,"line_start":129,"line_end":129,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":338},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":52647,"byte_end":52663,"line_start":157,"line_end":157,"column_start":19,"column_end":35},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":348},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":53340,"byte_end":53356,"line_start":186,"line_end":186,"column_start":19,"column_end":35},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":358},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":54035,"byte_end":54052,"line_start":215,"line_end":215,"column_start":19,"column_end":36},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":368},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,101,116,114,111,46,114,115],"byte_start":54737,"byte_end":54754,"line_start":244,"line_end":244,"column_start":19,"column_end":36},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":378},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,109,46,114,115],"byte_start":65073,"byte_end":65080,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":408},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":67831,"byte_end":67837,"line_start":52,"line_end":52,"column_start":19,"column_end":25},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":434},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,46,114,115],"byte_start":68298,"byte_end":68311,"line_start":71,"line_end":71,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":444},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73160,"byte_end":73167,"line_start":76,"line_end":76,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":474},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":73619,"byte_end":73627,"line_start":95,"line_end":95,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":484},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":74144,"byte_end":74158,"line_start":114,"line_end":114,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":494},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":74717,"byte_end":74731,"line_start":134,"line_end":134,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":504},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75245,"byte_end":75259,"line_start":153,"line_end":153,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":514},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,50,46,114,115],"byte_start":75758,"byte_end":75772,"line_start":172,"line_end":172,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":524},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":80908,"byte_end":80922,"line_start":42,"line_end":42,"column_start":19,"column_end":33},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":554},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":81537,"byte_end":81552,"line_start":68,"line_end":68,"column_start":19,"column_end":34},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":564},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,109,117,114,109,117,114,51,46,114,115],"byte_start":82173,"byte_end":82188,"line_start":94,"line_end":94,"column_start":19,"column_end":34},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":574},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86432,"byte_end":86439,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":612},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":86855,"byte_end":86866,"line_start":54,"line_end":54,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":9,"index":76},"to":{"krate":0,"index":52}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,101,97,46,114,115],"byte_start":87133,"byte_end":87144,"line_start":68,"line_end":68,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":9,"index":76},"to":{"krate":0,"index":72}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":89753,"byte_end":89765,"line_start":57,"line_end":57,"column_start":19,"column_end":31},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":652},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":90371,"byte_end":90383,"line_start":84,"line_end":84,"column_start":19,"column_end":31},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":662},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":90962,"byte_end":90975,"line_start":111,"line_end":111,"column_start":19,"column_end":32},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":672},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":91607,"byte_end":91622,"line_start":136,"line_end":136,"column_start":18,"column_end":33},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":682},"to":{"krate":2,"index":2584}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":91695,"byte_end":91710,"line_start":142,"line_end":142,"column_start":15,"column_end":30},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":682},"to":{"krate":2,"index":1944}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":91826,"byte_end":91841,"line_start":149,"line_end":149,"column_start":17,"column_end":32},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":682},"to":{"krate":2,"index":7636}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92107,"byte_end":92122,"line_start":161,"line_end":161,"column_start":20,"column_end":35},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":682},"to":{"krate":0,"index":76}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92407,"byte_end":92422,"line_start":175,"line_end":175,"column_start":21,"column_end":36},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":682},"to":{"krate":0,"index":52}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,115,112,111,111,107,121,46,114,115],"byte_start":92716,"byte_end":92731,"line_start":190,"line_end":190,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":682},"to":{"krate":0,"index":72}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":97307,"byte_end":97315,"line_start":58,"line_end":58,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":734},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":97770,"byte_end":97779,"line_start":79,"line_end":79,"column_start":19,"column_end":28},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":744},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98392,"byte_end":98402,"line_start":105,"line_end":105,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":754},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":98883,"byte_end":98893,"line_start":126,"line_end":126,"column_start":19,"column_end":29},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":764},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,116,49,104,97,46,114,115],"byte_start":99340,"byte_end":99348,"line_start":147,"line_end":147,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":774},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":103909,"byte_end":103917,"line_start":41,"line_end":41,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":804},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":104314,"byte_end":104322,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":814},"to":{"krate":0,"index":42}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105490,"byte_end":105500,"line_start":105,"line_end":105,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":832},"to":{"krate":2,"index":2584}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105573,"byte_end":105583,"line_start":111,"line_end":111,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":832},"to":{"krate":2,"index":1944}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":105719,"byte_end":105729,"line_start":120,"line_end":120,"column_start":17,"column_end":27},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":832},"to":{"krate":2,"index":7636}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106034,"byte_end":106044,"line_start":134,"line_end":134,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":832},"to":{"krate":0,"index":52}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106295,"byte_end":106305,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":832},"to":{"krate":0,"index":72}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106461,"byte_end":106471,"line_start":156,"line_end":156,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":856},"to":{"krate":2,"index":2584}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106544,"byte_end":106554,"line_start":162,"line_end":162,"column_start":15,"column_end":25},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":856},"to":{"krate":2,"index":1944}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106676,"byte_end":106686,"line_start":170,"line_end":170,"column_start":17,"column_end":27},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":856},"to":{"krate":2,"index":7636}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":106980,"byte_end":106990,"line_start":184,"line_end":184,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":856},"to":{"krate":0,"index":52}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,102,97,115,116,104,97,115,104,45,48,46,51,46,50,47,115,114,99,47,120,120,46,114,115],"byte_start":107241,"byte_end":107251,"line_start":199,"line_end":199,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":856},"to":{"krate":0,"index":72}}]}