{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53],"program":"/sgoinfre/goinfre/Perso/bbrunell/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","gcc","/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,link","-C","debuginfo=2","-C","metadata=5b1a727790e0ec62","-C","extra-filename=-5b1a727790e0ec62","--out-dir","/Users/bbrunell/npuzzle/target/rls/debug/deps","-L","dependency=/Users/bbrunell/npuzzle/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/sgoinfre/goinfre/Perso/bbrunell/toolchains/stable-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,98,98,114,117,110,101,108,108,47,110,112,117,122,122,108,101,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,103,99,99,45,53,98,49,97,55,50,55,55,57,48,101,48,101,99,54,50,46,114,108,105,98]},"prelude":{"crate_id":{"name":"gcc","disambiguator":[2721724947287769389,11580999969711365719]},"crate_root":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src","external_crates":[{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4680476137390187807,17118232108371533317]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[395860541893199504,14119727998271152369]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1883751235990237101,13050952199660841280]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14992191205204974336,187257134115189521]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","num":5,"id":{"name":"libc","disambiguator":[13711397750981643997,5466272945196031893]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","num":6,"id":{"name":"unwind","disambiguator":[3859305508273286470,8854496368734295790]}},{"file_name":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","num":7,"id":{"name":"panic_unwind","disambiguator":[3472742474031782457,1873693969544132989]}}],"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":59814,"line_start":1,"line_end":1686,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":59814,"line_start":1,"line_end":1686,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":30},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":248},{"krate":0,"index":254},{"krate":0,"index":250},{"krate":0,"index":258},{"krate":0,"index":264},{"krate":0,"index":260},{"krate":0,"index":268},{"krate":0,"index":274},{"krate":0,"index":270},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":280},{"krate":0,"index":288},{"krate":0,"index":302},{"krate":0,"index":298},{"krate":0,"index":294},{"krate":0,"index":290},{"krate":0,"index":70},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226}],"decl_id":null,"docs":" A library for build scripts to compile custom C code","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1283,"byte_end":1305,"line_start":42,"line_end":42,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1689,"byte_end":1695,"line_start":57,"line_end":57,"column_start":10,"column_end":16},"name":"Config","qualname":"::Config","value":"Build","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.3.51\",\n             note = \"gcc::Config has been renamed to gcc::Build\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1599,"byte_end":1679,"line_start":56,"line_end":56,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows_registry","qualname":"::windows_registry","value":"/sgoinfre/goinfre/Perso/bbrunell/registry/src/github.com-1ecc6299db9ec823/gcc-0.3.55/src/windows_registry.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":228},{"krate":0,"index":244},{"krate":0,"index":240},{"krate":0,"index":236},{"krate":0,"index":234},{"krate":0,"index":230},{"krate":0,"index":60}],"decl_id":null,"docs":" A helper module to probe the Windows Registry when looking for\n windows-specific tools.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":61154,"byte_end":61158,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"find","qualname":"::windows_registry::find","value":"fn (target: &str, tool: &str) -> Option<Command>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to find a tool within an MSVC installation using the Windows\n registry as a point to search from.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":61482,"byte_end":61491,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"find_tool","qualname":"::windows_registry::find_tool","value":"fn (_target: &str, _tool: &str) -> Option<Tool>","parent":null,"children":[],"decl_id":null,"docs":" Similar to the `find` function above, this function will attempt the same\n operation (finding a MSVC tool in a local install) but instead returns a\n `Tool` which may be introspected.\n","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":61454,"byte_end":61474,"line_start":45,"line_end":45,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":133},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63230,"byte_end":63234,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Vs12","qualname":"::windows_registry::VsVers::Vs12","value":"VsVers::Vs12","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Visual Studio 12 (2013)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":135},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63272,"byte_end":63276,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Vs14","qualname":"::windows_registry::VsVers::Vs14","value":"VsVers::Vs14","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Visual Studio 14 (2015)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":137},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63314,"byte_end":63318,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"Vs15","qualname":"::windows_registry::VsVers::Vs15","value":"VsVers::Vs15","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Visual Studio 15 (2017)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":139},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63591,"byte_end":63648,"line_start":104,"line_end":104,"column_start":5,"column_end":62},"name":"__Nonexhaustive_do_not_match_this_or_your_code_will_break","qualname":"::windows_registry::VsVers::__Nonexhaustive_do_not_match_this_or_your_code_will_break","value":"VsVers::__Nonexhaustive_do_not_match_this_or_your_code_will_break","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Hidden variant that should not be matched on. Callers that want to\n handle an enumeration of `VsVers` instances should always have a default\n case meaning that it's a VS version they don't understand.\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63567,"byte_end":63586,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":228},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63185,"byte_end":63191,"line_start":91,"line_end":91,"column_start":10,"column_end":16},"name":"VsVers","qualname":"::windows_registry::VsVers","value":"VsVers::{Vs12, Vs14, Vs15, __Nonexhaustive_do_not_match_this_or_your_code_will_break}","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139}],"decl_id":null,"docs":" A version of Visual Studio\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63176,"byte_end":63651,"line_start":91,"line_end":105,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63176,"byte_end":63651,"line_start":91,"line_end":105,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63822,"byte_end":63837,"line_start":112,"line_end":112,"column_start":8,"column_end":23},"name":"find_vs_version","qualname":"::windows_registry::find_vs_version","value":"fn () -> Result<VsVers, String>","parent":null,"children":[],"decl_id":null,"docs":" Find the most recent installed version of Visual Studio","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":63794,"byte_end":63814,"line_start":111,"line_end":111,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2191,"byte_end":2196,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"Build","qualname":"::Build","value":"Build {  }","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187}],"decl_id":null,"docs":" Extra configuration to pass to gcc.\n","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"crate has been renamed to `cc`, the `gcc` name is not maintained\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2091,"byte_end":2179,"line_start":78,"line_end":78,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3538,"byte_end":3543,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":201}],"decl_id":null,"docs":" Represents an internal error that occurred, with an explaination.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4401,"byte_end":4405,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"Tool","qualname":"::Tool","value":"Tool {  }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209}],"decl_id":null,"docs":" Configuration used to represent an invocation of a C compiler.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7113,"byte_end":7128,"line_start":238,"line_end":238,"column_start":8,"column_end":23},"name":"compile_library","qualname":"::compile_library","value":"fn (output: &str, files: &[&str]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compile a library from the given set of input C files.","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"crate has been renamed to `cc`, the `gcc` name is not maintained\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7017,"byte_end":7105,"line_start":237,"line_end":237,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7588,"byte_end":7591,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<Build>::new","value":"fn () -> Build","parent":null,"children":[],"decl_id":null,"docs":" Construct a new instance of a blank set of configuration.","sig":null,"attributes":[{"value":"deprecated(note =\n                 \"crate has been renamed to `cc`, the `gcc` name is not maintained\")","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7488,"byte_end":7576,"line_start":252,"line_end":252,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8802,"byte_end":8809,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"include","qualname":"<Build>::include","value":"fn <P> (&mut self, dir: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add a directory to the `-I` or include path for headers","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9260,"byte_end":9266,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"define","qualname":"<Build>::define","value":"fn <'a, V> (&mut self, var: &str, val: V) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Specify a `-D` variable with an optional value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9507,"byte_end":9513,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"object","qualname":"<Build>::object","value":"fn <P> (&mut self, obj: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add an arbitrary object file to link in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9927,"byte_end":9931,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"name":"flag","qualname":"<Build>::flag","value":"fn (&mut self, flag: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add an arbitrary flag to the invocation of the compiler","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11585,"byte_end":11602,"line_start":387,"line_end":387,"column_start":12,"column_end":29},"name":"flag_if_supported","qualname":"<Build>::flag_if_supported","value":"fn (&mut self, flag: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add an arbitrary flag to the invocation of the compiler if it supports it","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12114,"byte_end":12125,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"shared_flag","qualname":"<Build>::shared_flag","value":"fn (&mut self, shared_flag: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set the `-shared` flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12648,"byte_end":12659,"line_start":425,"line_end":425,"column_start":12,"column_end":23},"name":"static_flag","qualname":"<Build>::static_flag","value":"fn (&mut self, static_flag: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set the `-static` flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12825,"byte_end":12829,"line_start":431,"line_end":431,"column_start":12,"column_end":16},"name":"file","qualname":"<Build>::file","value":"fn <P> (&mut self, p: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add a file which will be compiled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13002,"byte_end":13007,"line_start":437,"line_end":437,"column_start":12,"column_end":17},"name":"files","qualname":"<Build>::files","value":"fn <P> (&mut self, p: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add files which will be compiled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13341,"byte_end":13344,"line_start":450,"line_end":450,"column_start":12,"column_end":15},"name":"cpp","qualname":"<Build>::cpp","value":"fn (&mut self, cpp: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set C++ support.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14066,"byte_end":14086,"line_start":474,"line_end":474,"column_start":12,"column_end":32},"name":"warnings_into_errors","qualname":"<Build>::warnings_into_errors","value":"fn (&mut self, warnings_into_errors: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set warnings into errors flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14609,"byte_end":14617,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"warnings","qualname":"<Build>::warnings","value":"fn (&mut self, warnings: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set warnings flags.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15618,"byte_end":15633,"line_start":525,"line_end":525,"column_start":12,"column_end":27},"name":"cpp_link_stdlib","qualname":"<Build>::cpp_link_stdlib","value":"fn <'a, V> (&mut self, cpp_link_stdlib: V) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set the standard library to link against when compiling with C++\n support.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17061,"byte_end":17075,"line_start":563,"line_end":563,"column_start":12,"column_end":26},"name":"cpp_set_stdlib","qualname":"<Build>::cpp_set_stdlib","value":"fn <'a, V> (&mut self, cpp_set_stdlib: V) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Force the C++ compiler to use the specified standard library.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17795,"byte_end":17801,"line_start":583,"line_end":583,"column_start":12,"column_end":18},"name":"target","qualname":"<Build>::target","value":"fn (&mut self, target: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the target this configuration will be compiling for.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18353,"byte_end":18357,"line_start":601,"line_end":601,"column_start":12,"column_end":16},"name":"host","qualname":"<Build>::host","value":"fn (&mut self, host: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the host assumed by this configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18710,"byte_end":18719,"line_start":610,"line_end":610,"column_start":12,"column_end":21},"name":"opt_level","qualname":"<Build>::opt_level","value":"fn (&mut self, opt_level: u32) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the optimization level of the generated object files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19086,"byte_end":19099,"line_start":619,"line_end":619,"column_start":12,"column_end":25},"name":"opt_level_str","qualname":"<Build>::opt_level_str","value":"fn (&mut self, opt_level: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the optimization level of the generated object files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19549,"byte_end":19554,"line_start":630,"line_end":630,"column_start":12,"column_end":17},"name":"debug","qualname":"<Build>::debug","value":"fn (&mut self, debug: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the compiler will emit debug information when\n generating object files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19932,"byte_end":19939,"line_start":640,"line_end":640,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Build>::out_dir","value":"fn <P> (&mut self, out_dir: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the output directory where all object files and static\n libraries will be located.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20325,"byte_end":20333,"line_start":650,"line_end":650,"column_start":12,"column_end":20},"name":"compiler","qualname":"<Build>::compiler","value":"fn <P> (&mut self, compiler: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the compiler to be used to produce output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20715,"byte_end":20723,"line_start":660,"line_end":660,"column_start":12,"column_end":20},"name":"archiver","qualname":"<Build>::archiver","value":"fn <P> (&mut self, archiver: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the tool used to assemble archives.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21333,"byte_end":21347,"line_start":674,"line_end":674,"column_start":12,"column_end":26},"name":"cargo_metadata","qualname":"<Build>::cargo_metadata","value":"fn (&mut self, cargo_metadata: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Define whether metadata should be emitted for cargo allowing it to\n automatically link the binary. Defaults to `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21670,"byte_end":21673,"line_start":683,"line_end":683,"column_start":12,"column_end":15},"name":"pic","qualname":"<Build>::pic","value":"fn (&mut self, pic: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the compiler will emit position independent code.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21944,"byte_end":21954,"line_start":691,"line_end":691,"column_start":12,"column_end":22},"name":"static_crt","qualname":"<Build>::static_crt","value":"fn (&mut self, static_crt: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the /MT flag or the /MD flag will be passed to msvc build tools.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22094,"byte_end":22103,"line_start":697,"line_end":697,"column_start":12,"column_end":21},"name":"__set_env","qualname":"<Build>::__set_env","value":"fn <A, B> (&mut self, a: A, b: B) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22478,"byte_end":22489,"line_start":708,"line_end":708,"column_start":12,"column_end":23},"name":"try_compile","qualname":"<Build>::try_compile","value":"fn (&self, output: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Run the compiler, generating the file `output`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25577,"byte_end":25584,"line_start":783,"line_end":783,"column_start":12,"column_end":19},"name":"compile","qualname":"<Build>::compile","value":"fn (&self, output: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Run the compiler, generating the file `output`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27883,"byte_end":27893,"line_start":851,"line_end":851,"column_start":12,"column_end":22},"name":"try_expand","qualname":"<Build>::try_expand","value":"fn (&self) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" This will return a result instead of panicing; see expand() for the complete description.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29074,"byte_end":29080,"line_start":889,"line_end":889,"column_start":12,"column_end":18},"name":"expand","qualname":"<Build>::expand","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Run the compiler, returning the macro-expanded version of the input files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30177,"byte_end":30189,"line_start":914,"line_end":914,"column_start":12,"column_end":24},"name":"get_compiler","qualname":"<Build>::get_compiler","value":"fn (&self) -> Tool","parent":null,"children":[],"decl_id":null,"docs":" Get the compiler that's in use for this configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30520,"byte_end":30536,"line_start":924,"line_end":924,"column_start":12,"column_end":28},"name":"try_get_compiler","qualname":"<Build>::try_get_compiler","value":"fn (&self) -> Result<Tool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the compiler that's in use for this configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":55674,"byte_end":55684,"line_start":1572,"line_end":1572,"column_start":12,"column_end":22},"name":"to_command","qualname":"<Tool>::to_command","value":"fn (&self) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Converts this compiler into a `Command` that's ready to be run.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56111,"byte_end":56115,"line_start":1585,"line_end":1585,"column_start":12,"column_end":16},"name":"path","qualname":"<Tool>::path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path for this compiler.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56310,"byte_end":56314,"line_start":1591,"line_end":1591,"column_start":12,"column_end":16},"name":"args","qualname":"<Tool>::args","value":"fn (&self) -> &[OsString]","parent":null,"children":[],"decl_id":null,"docs":" Returns the default set of arguments to the compiler needed to produce\n executables for the target this compiler generates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56544,"byte_end":56547,"line_start":1599,"line_end":1599,"column_start":12,"column_end":15},"name":"env","qualname":"<Tool>::env","value":"fn (&self) -> &[(OsString, OsString)]","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of environment variables needed for this compiler to\n operate.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3697,"byte_end":3702,"line_start":130,"line_end":130,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3851,"byte_end":3856,"line_start":136,"line_end":136,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5077,"byte_end":5087,"line_start":173,"line_end":173,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7276,"byte_end":7281,"line_start":246,"line_end":246,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54671,"byte_end":54676,"line_start":1539,"line_end":1539,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54742,"byte_end":54746,"line_start":1545,"line_end":1545,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2008,"byte_end":2024,"line_start":74,"line_end":74,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":50}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3697,"byte_end":3702,"line_start":130,"line_end":130,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3851,"byte_end":3856,"line_start":136,"line_end":136,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":268},"to":{"krate":2,"index":2606}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5077,"byte_end":5087,"line_start":173,"line_end":173,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7276,"byte_end":7281,"line_start":246,"line_end":246,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54671,"byte_end":54676,"line_start":1539,"line_end":1539,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":248},"to":{"krate":2,"index":2584}},{"span":{"file_name":[47,115,103,111,105,110,102,114,101,47,103,111,105,110,102,114,101,47,80,101,114,115,111,47,98,98,114,117,110,101,108,108,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,103,99,99,45,48,46,51,46,53,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":54742,"byte_end":54746,"line_start":1545,"line_end":1545,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}}]}